AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create VPC, subnets, NAT gateway, and internet gateway.'

Parameters:
  VPCName:
    Type: String
    Description: Enter a name for the VPC
    Default: 'ffqavpc'

  VPCCIDR:
    Type: String
    Description: Enter the CIDR block for the VPC (e.g., 192.168.0.0/16)
    Default: '192.168.0.0/16'
  Subnet1pub:
    Type: String
    Description: Enter Public Subnet 1
    Default: '192.168.0.0/24'
  Subnet2pub:
    Type: String
    Description: Enter Public Subnet 2
    Default: '192.168.1.0/24' 
  Subnet3pub:
    Type: String
    Description: Enter Public Subnet 3
    Default: '192.168.2.0/24'
  Subnet1pri:
    Type: String
    Description: Enter Private Subnet 1
    Default: '192.168.10.0/24'
  Subnet2pri:
    Type: String
    Description: Enter Private Subnet 2
    Default: '192.168.11.0/24'
  Subnet3pri:
    Type: String
    Description: Enter Private Subnet 3
    Default: '192.168.12.0/24'
  

Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      Tags:
        - Key: Name
          Value: !Ref VPCName

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway

  NatEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: 'vpc'

  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatEIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      CidrBlock: !Ref Subnet1pub
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PublicSubnet1"

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1b
      CidrBlock: !Ref Subnet2pub
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PublicSubnet2"

  PublicSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1c
      CidrBlock: !Ref Subnet3pub
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PublicSubnet3"

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1a
      CidrBlock: !Ref Subnet1pri
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PrivateSubnet1"

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1b
      CidrBlock: !Ref Subnet2pri
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PrivateSubnet2"
  PrivateSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      AvailabilityZone: us-east-1c
      CidrBlock: !Ref Subnet3pri
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-PrivateSubnet3"
  PublicSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetRouteTableAssociation3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCId:
    Description: The ID of the VPC created
    Value: !Ref MyVPC
    Export:
      Name: "ff-qa-VPCId"

  PublicSubnetIds:
    Description: The IDs of the public subnets created
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2, !Ref PublicSubnet3]]
    Export:
      Name: "ff-qa-PublicSubnetIds"

  PrivateSubnetIds:
    Description: The IDs of the public subnets created
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3]]
    Export:
      Name: "ff-qa-PrivateSubnetIds"

  EipAddress:
    Description: The EIP used with NAT gateway
    Value: !Ref NatEIP
    Export:
      Name: "ff-qa-EipAddress"
